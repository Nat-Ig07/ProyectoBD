@page "/Mascota/nuevaMascota"
@page "/Mascota/editarMascota/{Id:int}"
@rendermode InteractiveServer
@using ProyectoBD.Data;
@inject IRepositorio_Mascota _repositorioMascota
@inject IRepositorio_Servicio _repositorioServicio
@inject NavigationManager _navigation

<div class="m-2 p-4 bg-light text-dark">

<h2 class="mb-2">Datos de la mascota</h2>

<EditForm Model="_mascota" FormName="frmMascota" OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="form-group mb-3">
        <label for="Nombre">Nombre</label>
        <InputText id="Nombre" class="form-control" @bind-Value="_mascota.Nombre" placeholder="Manchitas" />
        <ValidationMessage For="()=>_mascota.Nombre" />

    </div>
    <div class="form-group mb-3">
        <label for="Especie">Especie</label>
            <InputText id="Especie" class="form-control" @bind-Value="_mascota.Especie" placeholder="Perro" />
        <ValidationMessage For="()=>_mascota.Especie" />
    </div>

    <div class="form-group mb-3">
        <label for="Raza">Raza</label>
        <InputText id="Raza" class="form-control" @bind-Value="_mascota.Raza" placeholder="Dalmata" />
        <ValidationMessage For="()=>_mascota.Raza" />
    </div>

      @*  <div class="form-group mb-3">
            <label for="Servicio">Servicios</label>
            <InputSelect id="Servicio" class="form-select" @bind-Value="_mascota.ServicioId">
             <option value="0"> </option>
                @foreach (Servicio servicio in _servicios)
                {
                    <option value="@servicio.Id">@servicio.Producto</option>
                }
            </InputSelect>
        </div> *@

    

</EditForm>

<div class="d-grid gap-2 d-md-flex justify-content-md-end">
<button class="btn btn-dark btn-sm" @onclick="Guardar">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check2-circle" viewBox="0 0 16 16">
        <path d="M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0" />
        <path d="M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0z" />
    </svg> Guardar
</button>

<button class="btn btn-danger btn-sm" @onclick="Cancelar">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
        <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708" />
    </svg> Cancelar
</button>
</div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    private Mascota _mascota = new();
   // private List<Servicio> _servicios = new();

    protected override async Task OnParametersSetAsync()
    {
       // _servicios = await _repositorioMascota.GetServicios();
        if (Id > 0)
        {
            _mascota = await _repositorioMascota.Get(Id);
        }
    }

    private async void Guardar()
    {
        if (Id > 0)
        {
            await _repositorioMascota.Update(Id, _mascota);
            _navigation.NavigateTo("/Mascota");
        }
        else
        {
            await _repositorioMascota.Add(_mascota);
        }
        Cancelar();
    }
    private void Cancelar()
    {
        _navigation.NavigateTo("/Mascota");
    }
}